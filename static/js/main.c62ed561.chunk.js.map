{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","content","className","map","title","classNames","href","onClick","App","firstTab","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAC/DO,EAAYJ,EAAZI,QAER,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAAAJ,GACR,IAAQC,EAAcD,EAAdC,GAAII,EAAUL,EAAVK,MAEZ,OACE,oBAEEF,UAAWG,IAAW,CACpB,YACDR,EAAYG,KAAOD,EAAIC,KAExB,UAAQ,MANV,SAQE,mBACEM,KAAI,WAAMN,GACV,UAAQ,UACRO,QAAS,WACHV,EAAYG,KAAOD,EAAIC,IAI3BJ,EAAcG,IARlB,SAWGK,KAlBEJ,UA0Bf,qBAAKE,UAAU,QAAQ,UAAQ,aAA/B,SACGD,QC/CIP,EAAc,CACzB,CAAEM,GAAI,QAASI,MAAO,QAASH,QAAS,eACxC,CAAED,GAAI,QAASI,MAAO,QAASH,QAAS,eACxC,CAAED,GAAI,QAASI,MAAO,QAASH,QAAS,gBAG7BO,EAAgB,WAC3B,IAAMC,EAAWf,EAAK,GAEtB,EAA0CgB,mBAASD,EAAST,IAA5D,mBAAOL,EAAP,KAAsBgB,EAAtB,KACMd,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBc,EAIlE,OACE,sBAAKP,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBL,EAAYO,SAGlC,cAAC,EAAD,CACEV,KAAMA,EACNC,cAAeA,EACfC,cAXe,SAACG,GAAD,OAAcY,EAAiBZ,EAAIC,WChB1DY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c62ed561.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n  const { content } = selectedTab;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                key={id}\n                className={classNames({\n                  'is-active':\n                 selectedTab.id === tab.id,\n                })}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (selectedTab.id === tab.id) {\n                      return;\n                    }\n\n                    onTabSelected(tab);\n                  }}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const firstTab = tabs[0];\n\n  const [selectedTabId, setSelectedTabId] = useState(firstTab.id);\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || firstTab;\n\n  const handleSelect = (tab: Tab) => setSelectedTabId(tab.id);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleSelect}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}