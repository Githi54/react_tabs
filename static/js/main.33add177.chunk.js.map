{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","content","onSelected","className","map","tab","id","title","href","onClick","App","firstTab","useState","setSelectedTabId","selectedTab","find","ReactDOM","render","document","getElementById"],"mappings":"iMASaA,EAAwB,SAAC,GAK/B,IAJLC,EAII,EAJJA,KACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,QACAC,EACI,EADJA,WAEA,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGJ,EAAKK,KAAI,SAAAC,GACR,IAAQC,EAAcD,EAAdC,GAAIC,EAAUF,EAAVE,MAEZ,OACE,oBAEEJ,UAAWH,IAAkBM,EACzB,YACA,GACJ,UAAQ,MALV,SAOE,mBACEE,KAAI,WAAMF,GACV,UAAQ,UACRG,QAAS,WACHT,IAAkBM,GAItBJ,EAAWG,IARf,SAWGE,KAjBED,UAyBf,qBAAKH,UAAU,QAAQ,UAAQ,aAA/B,SACGF,QC3CIF,EAAc,CACzB,CAAEO,GAAI,QAASC,MAAO,QAASN,QAAS,eACxC,CAAEK,GAAI,QAASC,MAAO,QAASN,QAAS,eACxC,CAAEK,GAAI,QAASC,MAAO,QAASN,QAAS,gBAG7BS,EAAgB,WAC3B,IAAMC,EAAWZ,EAAK,GAEtB,EAA0Ca,mBAASD,EAASL,IAA5D,mBAAON,EAAP,KAAsBa,EAAtB,KACMC,EAAcf,EAAKgB,MAAK,SAAAV,GAAG,OAAIA,EAAIC,KAAON,MAAkBW,EAIlE,OACE,sBAAKR,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBW,EAAYP,SAGlC,cAAC,EAAD,CACER,KAAMA,EACNC,cAAeA,EACfC,QAASa,EAAYb,QACrBC,WAZe,SAACG,GAAD,OAAcQ,EAAiBR,EAAIC,WChB1DU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.33add177.chunk.js","sourcesContent":["import { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  content: string;\n  onSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  content,\n  onSelected,\n}) => {\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                key={id}\n                className={selectedTabId === id\n                  ? 'is-active'\n                  : ''}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (selectedTabId === id) {\n                      return;\n                    }\n\n                    onSelected(tab);\n                  }}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const firstTab = tabs[0];\n\n  const [selectedTabId, setSelectedTabId] = useState(firstTab.id);\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || firstTab;\n\n  const handleSelect = (tab: Tab) => setSelectedTabId(tab.id);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        content={selectedTab.content}\n        onSelected={handleSelect}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}